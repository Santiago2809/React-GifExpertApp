{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,QAkBhBG,YAAY,8B,uBCvBfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAWH,GAFxF,sBAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAa,IAAXL,EAAU,EAAVA,IAEnBE,EAAaF,EAAbE,MAAMV,EAAOQ,EAAPR,IAEb,OACI,sBAAKc,UAAU,8DAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAI,QACrB,kCAAMN,EAAN,WCLCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAENxB,EAASC,GACLwB,MAAM,SAAAd,GACHY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAItB,CAAEpB,IAGEqB,EDjB0BI,CAAczB,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,mCAAd,cAAoDhB,EAApD,OACEoB,GACE,sBAAKJ,UAAU,aAAf,UAA4B,wBAAW,2BAE3C,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,CAEIA,IAAMA,GADAA,EAAIC,aEavBe,EA3BM,WAEjB,MAAoCzC,mBAAS,CAAC,oBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,qCACI,oBAAIgC,UAAU,YAAd,0BACA,cAAC,EAAD,CAAahC,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWlB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MChBlC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.916e2404.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2) {\r\n            // console.log( setCategories );\r\n            setCategories( cats => [inputValue,...cats ]);\r\n            setInputValue('');\r\n        };\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n                placeholder=\"Escriba cualquier cosa\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=YBVWShn7ACE22lXWCGNC8EadpyQhYVY0&q=${ encodeURI( category )}&limit=10`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url, \r\n        }\r\n    });\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( {img} ) => {\r\n    \r\n    const {title,url} = img; \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUpBig animate__faster\">\r\n            <img src={ url } alt=\"GIF\"/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n    // <p className=\"cargando\">Cargando...</p>\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__flash\"> { category } </h3>\r\n            { loading && \r\n                <div className=\"lds-ripple\"><div></div><div></div></div>\r\n            }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            img={ img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs' \r\n\r\nexport const useFetchGifs = ( category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n         getGifs( category )\r\n            .then( img => {\r\n                setstate({\r\n                    data: img,\r\n                    loading: false,\r\n                });\r\n            })\r\n\r\n    }, [ category ]);\r\n\r\n\r\n    return state;\r\n\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['Attack on Titan']);\r\n    // const handleAdd = () => {\r\n    //     setCategories( [...categories,'HunterxHunter']);\r\n\r\n    //     // setCategories( cats => [...cats,'HunterxHunter']);\r\n    // };\r\n    return (\r\n        <>\r\n            <h2 className=\"h2-titulo\">GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr></hr>\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                        <GifGrid\r\n                            key={ category } \r\n                            category={ category } \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport '../src/index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}